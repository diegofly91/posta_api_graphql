type TimeEmployee {
    id: Int!
    timetableId: Int!
    timetable: Timetable
    employeeId: Int!
    # employee: Employee
    startTime: String!
    endTime: String!
    isActive: Boolean
    createAdt: String!
    createUpd: String
}

input NewTimeEmployeeInput {
  timetableId: Int!
  employeeId: Int!
  startTime: String!
  endTime: String!
  isActive: Boolean!
}

input TimeEmployeeInput {
  startTime: String!
  endTime: String!
  isActive: Boolean!
}

input TimeEmployeeInputQuery {
  employeeId: Int!
  isActive: Boolean
}

type Query {
   getTimeEmployee(input: TimeEmployeeInputQuery!): [TimeEmployee!]!
}

type Mutation {
  createTimeEmployee(input: NewTimeEmployeeInput!): Boolean! 
  updateTimeEmployee(id: Int!, input: TimeEmployeeInput!): Boolean!
  deleteTimeEmployee(id: Int!): Boolean!
}
