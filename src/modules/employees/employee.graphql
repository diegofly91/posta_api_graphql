type Employee {
  id: Int!
  companyId: Int!
  name: String!
  lastname: String
  mobile: String
  company: Company!
  timeemployee: [TimeEmployee]!
  servempls: [ServEmpl]!
  isActive: Boolean
  createAdt: String!
  createUpd: String
}

input NewEmployeeInput {
  companyId: Int!
  name: String!
  mobile: String
  lastname: String
  isActive: Boolean
}


input EmployeeInput {
  name: String!
  lastname: String
  mobile: String
  isActive: Boolean
}

input EmployeeInputQuery {
  companyId: Int!
  name: String
  lastname: String
  isActive: Boolean
}

type Query {
   getEmployee(id: Int!): Employee!
   getEmployees(input: EmployeeInputQuery!, pagination: Pagination): [Employee!]!
   countEmployees(input: EmployeeInputQuery!): Int!
}

type Mutation {
  createEmployee(input: NewEmployeeInput!): Employee! 
  updateEmployee(id: Int!, input: EmployeeInput!): Boolean!
  deleteEmployee(id: Int!): Boolean!
}
