type TimeService {
    id: Int!
    timetableId: Int!
    timetable: Timetable
    serviceId: Int!
    # service: Service
    startTime: String!
    endTime: String!
    isActive: Boolean
    createAdt: String!
    createUpd: String
}

input NewTimeServiceInput {
  timetableId: Int!
  serviceId: Int!
  startTime: String!
  endTime: String!
  isActive: Boolean!
}

input TimeServiceInput {
  startTime: String!
  endTime: String!
  isActive: Boolean!
}

input TimeServiceInputQuery {
  serviceId: Int!
  isActive: Boolean
}

type Query {
   getTimeService(input: TimeServiceInputQuery!): [TimeService!]!
}

type Mutation {
  createTimeService(input: NewTimeServiceInput!): Boolean! 
  updateTimeService(id: Int!, input: TimeServiceInput!): Boolean!
  deleteTimeService(id: Int!): Boolean!
}
